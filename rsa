#!/usr/bin/python3
"""
Factorize as many numbers as possible into a product of two smaller numbers.
    Usage: factors <file>
        where <file> is a file containing natural numbers to factor.
        One number per line
        You can assume that all lines will be valid natural numbers\
                greater than 1
        You can assume that there will be no empy line, and no space\
                before and after the valid number
        The file will always end with a new line
    Output format: n=p*q
        one factorization per line
        p and q don’t have to be prime numbers
        See example
    You can work on the numbers of the file in the order of your choice
    Your program should run without any dependency: You will not be ablei\
            to install anything on the machine we will run your program on
    Time limit: Your program will be killed after 5 seconds\
            if it hasn’t finish
    Push all your scripts, source code, etc… to your repository
"""

# install dependency
import sys


# unpack factorial number
def func():
    """
    Search file arg, convert to number and
    format n = p*q.
    """
    try:
        file_no = sys.argv[1]  # : grabs the passed file_name from the cli

        with open(file_no) as f:
            for factorial in f:
                factorial = int(factorial)
                if factorial % 2 == 0:
                    print("{}={}*{}".format(factorial, factorial // 2, 2))
                    continue
            i = 3
            while i < factorial // 2:
                if factorial % i == 0:
                    print("{}={}*{}".format(factorial, factorial // i, i))
                    break
            i = i + 2
            if i == (factorial // 2) + 1:
                print("{}={}*{}".format(factorial, factorial, i))
    except IndexError:
        pass


# call the function on module call
func()
